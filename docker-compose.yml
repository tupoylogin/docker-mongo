version: '3'

volumes:
    mongo-keys:

services:

    keys:
        image: depop/openssl-bats
        volumes:
            - mongo-keys:/mongo-conf
        command: 'bin/bash -c "openssl rand -base64 742 > /mongo-conf/mongodb-keyfile; chmod 600 /mongo-conf/mongodb-keyfile; chown 999 /mongo-conf/mongodb-keyfile"'
# setup config servers
    mongo-cfg-2:
        container_name: "mongo-cfg-2"
        networks:
            mongo:
                ipv4_address: 192.168.1.14
        image: mongo:4.0.1
        ports:
            - "30102:27017"
        volumes:
            - mongo-keys:/opt/keyfile
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongod --auth --keyFile /opt/keyfile/mongodb-keyfile --replSet cnf-serv --configsvr --port 27017 --oplogSize 16 --bind_ip_all --noprealloc --smallfiles"'
        env_file:
            - ./mongod.env
        restart: always

    mongo-cfg-1:
        container_name: "mongo-cfg-1"
        networks:
            mongo:
                ipv4_address: 192.168.1.15
        image: mongo:4.0.1
        ports:
            - "30101:27017"
        volumes:
            - mongo-keys:/opt/keyfile
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongod --auth --keyFile /opt/keyfile/mongodb-keyfile --replSet cnf-serv --configsvr --port 27017 --oplogSize 16 --bind_ip_all --noprealloc --smallfiles"'
        env_file:
            - ./mongod.env
        restart: always

    mongo-cfg-setup:
        container_name: "mongo-cfg-setup"
        image: mongo:4.0.1
        depends_on:
            - "mongo-cfg-1"
            - "mongo-cfg-2"
            - "keys"
        links:
            - mongo-cfg-1:mongo-cfg-1
            - mongo-cfg-2:mongo-cfg-2
        volumes:
            - ./scripts:/scripts
        environment: 
            - MONGO1=mongo-cfg-1
            - MONGO2=mongo-cfg-2
            - RS=cnf-serv
            - PORT=27017
        entrypoint: [ "/scripts/setup-cfg.sh" ]

    mongo-1-2:
        container_name: "mongo-1-2"
        networks:
            mongo:
                ipv4_address: 192.168.1.11
        image: mongo:4.0.1
        #user: mongodb
        ports:
            - "30012:27017"
        volumes:
            - mongo-keys:/opt/keyfile
            - ./data:/data
        env_file:
            - ./mongod.env
        depends_on:
            - "mongo-cfg-1"
            - "mongo-cfg-2"
            - "keys"
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongod --auth --keyFile /opt/keyfile/mongodb-keyfile --shardsvr --replSet rs1  --oplogSize 16 --bind_ip_all --noprealloc --smallfiles"'
        restart: always

    mongo-1-3:
        container_name: "mongo-1-3"
        networks:
            mongo:
                ipv4_address: 192.168.1.12
        image: mongo:4.0.1
        #user: mongodb
        ports:
            - "30013:27017"
        volumes:
            - mongo-keys:/opt/keyfile
            - ./data:/data
        env_file:
            - ./mongod.env
        depends_on:
            - "mongo-cfg-1"
            - "mongo-cfg-2"
            - "keys"
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongod --auth --keyFile /opt/keyfile/mongodb-keyfile --shardsvr --replSet rs1  --oplogSize 16 --bind_ip_all --noprealloc --smallfiles"'
        restart: always 

    mongo-1-1:
        container_name: "mongo-1-1"
        networks:
            mongo:
                ipv4_address: 192.168.1.13
        image: mongo:4.0.1
        #user: mongodb
        ports:
            - "30011:27017"
        volumes:
            - mongo-keys:/opt/keyfile
            - ./data:/data
        env_file:
            - ./mongod.env
        depends_on:
            - "mongo-cfg-1"
            - "mongo-cfg-2"
            - "keys"
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongod --auth --keyFile /opt/keyfile/mongodb-keyfile --shardsvr --replSet rs1  --oplogSize 16 --bind_ip_all --noprealloc --smallfiles"'
        restart: always

    mongo-rs1-setup:
        container_name: "mongo-rs1-setup"
        image: mongo:4.0.1
        depends_on:
            - "mongo-1-1"
            - "mongo-1-2"
            - "mongo-1-3"
            - "keys"
        user: mongodb
        env_file:
            - ./mongod.env
        links:
            - mongo-1-1:mongo-1-1
            - mongo-1-2:mongo-1-2
            - mongo-1-3:mongo-1-3
        volumes:
            - ./scripts:/scripts
        #command: [--auth]
        environment: 
            - MONGO1=mongo-1-1
            - MONGO2=mongo-1-2
            - MONGO3=mongo-1-3
            - RS=rs1
        entrypoint: [ "/scripts/setup.sh" ]
    
    mongo-router:
        container_name: "mongo-router"
        image: mongo:4.0.1
        ports:
            - "30001:27017"
        volumes:
            - mongo-keys:/opt/keyfile
        env_file:
            - ./mongod.env
        depends_on:
            - "mongo-rs1-setup"
            - "mongo-cfg-setup"
            - "keys"
        links:
            - mongo-cfg-1:mongo-cfg-1
            - mongo-cfg-2:mongo-cfg-2
            - mongo-1-1:mongo-1-1
            - mongo-1-2:mongo-1-2
            - mongo-1-3:mongo-1-3
        command: 'bin/bash -c "chown mongodb /opt/keyfile/mongodb-keyfile; mongos --keyFile /opt/keyfile/mongodb-keyfile --configdb cnf-serv/mongo-cfg-1:27017,mongo-cfg-2:27017,mongo-cfg-3:27017 --port 27017 --bind_ip_all"'
        #command: mongos --configdb cnf-serv/mongo-cfg-1:27017,mongo-cfg-2:27017,mongo-cfg-3:27017 --port 27017 --bind_ip_all
        restart: always

    mongo-shard-setup:
        container_name: "mongo-shard-setup"
        image: mongo:4.0.1
        depends_on:
            - "mongo-router"
            - "keys"
        env_file:
            - ./mongod.env
        links:
            - mongo-router:mongo-router
        volumes:
            - mongo-keys:/opt/keyfile
            - ./scripts:/scripts
            - ./data:/data
        environment: 
            - MONGOS=mongo-router
            - MONGO11=mongo-1-1
            - MONGO12=mongo-1-2
            - MONGO13=mongo-1-3
            - RS1=rs1
            - PORT=27017
            - PORT1=27017
            - PORT2=27017
            - PORT3=27017
        entrypoint: [ "/scripts/init-shard.sh" ]
        restart: on-failure:20

networks:
    mongo:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.1.10/24
